/*
  Button styling that lets us use them semantically and not overload anchors
  and spans.
*/
@import "./components/_menus";

// Mixins to make other things button-like
.transparent-color-variant(@color) {
  background: @color;
  color: @brand-contrast;
  text-transform: none;
  font-size: 1rem;

  div.menu & {
    color: darken(@color, 5%);

    &[disabled] {
      color: @text-muted;
    }
  }

  &:hover, &.active {
    background: lighten(@color, 15%);
  }

  &[disabled] {
    background: @shade-rel;
    color: @text-muted;

    &:hover {
      background: @shade-rel;
      transform: none;
    }
  }

  &:active, &:hover:active, &.active:active {
    background: darken(@color, 10%);
    box-shadow: none;

    div.menu & {
      background: darken(@text-highlight-bg, 5%);
    }
  }
}

.button() {
  color: @link-muted;
  border: 0;
  background: transparent;
  display: inline-block;
  line-height: @input-height-base;
  vertical-align: middle;
  padding: 0 (@input-height-base / 2);
  white-space: nowrap;
  font-size: @font-size-small;
  text-transform: uppercase;
  text-decoration: none;

  transition: color 0.3s, border 0.3s, background-color 0.3s, transform 0.3s;
  border-radius: 500px; // Capsule shape

  cursor: pointer;
  touch-action: manipulation;

  .description {
    text-transform: none;
    margin-top: 0;
    font-size: @font-size-small;
    font-weight: normal;
    white-space: normal;
    line-height: 1.25;

    &:last-child {
      padding-bottom: @padding-small;
    }
  }

  &:hover, &:focus {
    color: @link-color;
    text-decoration: none;
  }

  &[disabled] {
    cursor: not-allowed;
    opacity: .65;
    box-shadow: none;
    color: @text-muted;

    &:hover, &:focus {
      color: @text-muted;
    }
  }

  &.primary, &.success, &.warning, &.danger, &[type="submit"] {
    // border: 1px solid @border-color;
    // line-height: calc(@input-height-base ~" - 2px");
    box-shadow: @default-box-shadow;

    &:hover, &:focus {
      box-shadow: @plus-box-shadow;
    }

    &[disabled] {
      box-shadow: none;

      &:hover, &:focus {
        box-shadow: none;
      }
    }
  }

  &.primary, &[type="submit"] {
    .transparent-color-variant(@brand-primary);
  }

  &.secondary {
    font-size: 1rem;
    border-width: 1px;
    border-style: solid;
    border-color: @link-color;
    color: @link-color;
    text-transform: none;

    &:hover {
      background: @link-color;
      color: @off-white;
    }
  }

  &.success {
    .transparent-color-variant(@success);
  }

  &.warning {
    .transparent-color-variant(@warning);
  }

  &.danger {
    .transparent-color-variant(@danger);
  }
}

// Assign button style to buttons but default
button, input[type="submit"] {
  .button();
}

/*
  Use .menu to group buttons together -- we'd use the actual menu element
  but it has a specific meaning that might change apperance in subsequent
  iterations of HTML
*/
div.menu {
  button, input[type=submit] {
    .menu-item();

    &[disabled] {
      color: @text-muted;
      background: transparent;

      &:hover, &:focus {
        color: @text-muted;
        background: transparent;
      }
    }

    .description {
      color: @text-muted;
      margin-bottom: 0;
    }
  }
}

// Override normalize.css weirdness
button {
  font-family: @font-family-sans-serif;
}

/* Icon buttons - shrink slightly */
button {
  .icon-label.no-text:only-child {
    margin-left: -(@input-height-base / 2);
    margin-right: -(@input-height-base / 2);
  }
}

/* Style button like input box */
button.input-style {
  text-align: left;
  border: 1px solid @border-color;
  color: @text-color;
  font-weight: normal;
  text-transform: none;
}

// CTA links -> like buttons
a.cta {
  .button();
  text-align: center;
  margin: 0 auto;
}

/*
  CTAs are bigger than normal buttons. Note that things look weird if we mix
  and match CTA with normal buttons because of the font-size differences.
  The idea is to move towards consistently large buttons (easier to tap
  on mobile) but this breaks the existing non-landing page UI in a bunch
  of places so we're holding off on that for now.
*/
a.cta, button.cta, input[type="submit"].cta {
  line-height: @input-height-large;
  height: @input-height-large;
  padding: 0 (@input-height-large / 2 + @padding-small);
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;

  @media screen and (max-width: @screen-xs-max) {
    min-width: 80%;
  }
}