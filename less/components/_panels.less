/*
  Panels are boxes to wrap our content with. This class also has special
  meaning when used with sidebars defined in _layout.

  The important things about panels is that they can be nested without
  padding stacking. This also applies to certain elements like selectors
  and textareas.

  Certain elements (modals and dropdown-menus) are panel-like and build
  upon the panel class.
*/
@import (reference) "../_variables";
@import (reference) "./_menus";

// Top-level panels are boxes
.panel {
  padding: @padding-base;
  border-radius: @border-radius-base;
  border: 1px solid @border-color;
  box-shadow: @default-box-shadow;
  background: @panel-bg;

  // Nested panels (and certain other elements) don't stack
  // (look like tiles instead)
  .panel, header, footer, nav, .menu, .content, .row {
    padding-left: @padding-base;
    padding-right: @padding-base;
    border-width: 0;
    border-radius: 0;
    margin-left: -@padding-base;
    margin-right: -@padding-base;
    margin-bottom: 0;
    box-shadow: none;
    background: transparent; // So rounded corners don't get cut off

    &:first-child {
      margin-top: -@padding-base;
    }

    &:last-child {
      margin-bottom: -@padding-base;
    }

    /*
      Override * + * selector. No margin-top necessary if following something
      with padding
    */
    + * {
      margin-top: 0;
    }
  }

  // Extra padding
  .panel, nav, .menu, .content {
    padding: @padding-base;
  }

  /*
    Override * + * selector. No margin-top necessary because these elements
    have padding already.
  */
  * {
    + nav, + .menu, + .content {
      &:not(.panel) {
        margin-top: 0;
      }
    }
  }

  // These elements always have a border on top when following something
  * {
    + .panel, + footer, + header, + .row {
      border-top: 1px solid @border-color;
    }
  }

  // Underline headers
  header + *, header + .content {
    margin-left: -@padding-base;
    margin-right: -@padding-base;
    border-top: 1px solid @border-color;
  }

  // No horizontal padding on mobile for only some elements
  @media screen and (max-width: @screen-xs-max) {
    margin-left: -@padding-base;
    margin-right: -@padding-base;
    border-left: 0;
    border-right: 0;
    border-radius: 0;
  }

  // Certain elements maintain full-width (but any vertical padding still
  // stacks)
  .alert, progress, nav, .menu {
    margin-left: -@padding-base;
    margin-right: -@padding-base;
    border-radius: 0;
    border-left: 0;
    border-right: 0;
  }


  /* Progress bars */

  progress {
    width: calc(~"100% + " (2 * @padding-base));
    border-radius: 0;
    height: 3px;

    + * {
      border-top: 0;
    }

    + .panel, + footer,  +header {
      border-top: 0;
      margin-top: 0;
    }
  }

  *, .panel, footer, header {
    + progress {
      border: 0;
    }
  }


  /* Form elements */

  textarea {
    margin-left: -@padding-base;
    margin-right: -@padding-base;
    width: calc(~"100% + " (2 * @padding-base));
    border-left: 0;
    border-right: 0;
    border-radius: 0;
    resize: vertical;
  }

  // Specific styling for certain elements
  input, button.input-style {
    width: 100%;
  }

  input[type=checkbox], input[type=radio], input[type=submit] {
    width: inherit;
  }


  /* Selectors + nav links + button menus - stretch to edges */

  nav > a { .menu-item; }

  .menu, nav {
    > * {
      margin-left: -@padding-base;
      margin-right: -@padding-base;
    }

    > button, input[type=submit] {
      padding-top: 0;
      padding-bottom: 0;
      width: calc(~"100% + " 2 * @padding-base);
    }

    > :first-child {
      margin-top: -@padding-small;
    }

    > :last-child {
      margin-bottom: -@padding-small;
    }
  }

  // Clearfix
  &::after {
    content: " ";
    display: block;
    clear: both;
  }
}
